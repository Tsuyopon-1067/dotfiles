{
	"Function component with css module": {
		"prefix": "funcompcss",
		"body": [
			"import styles from \"./$TM_FILENAME_BASE.module.css\";",
			"",
			"export const $TM_FILENAME_BASE = () => {",
			"  return (",
			"    <div>",
			"      $0",
			"    </div>",
			"  );",
			"}"
		],
		"description": "Create function component with css module import"
	},
	"Function component": {
		"prefix": "funcomp",
		"body": [
			"export const $TM_FILENAME_BASE = () => {",
			"  return (",
			"    <div>",
			"      $0",
			"    </div>",
			"  );",
			"}"
		],
		"description": "Create function component"
	},
	"type": {
		"prefix": "type",
		"body": [
			"type ${1:name} = {",
			"  $0",
			"}"
		],
		"description": "Create interface"
	},
	"interface": {
		"prefix": "interface",
		"body": [
			"interface ${1:name} {",
			"  $0",
			"}"
		],
		"description": "Create interface"
	},
	"css modulle": {
		"prefix": "cssmod",
		"body": [
			"import styles from \"./$TM_FILENAME_BASE.module.css\";"
		],
		"description": "Import css module"
	},
	"className": {
		"prefix": "clsname",
		"body": [
			"className={styles.${1:className}}"
		],
		"description": "insert className"
	},
	"tailwind CSS className": {
		"prefix": "clst",
		"body": [
			"className={\"${1:property}\"}"
		],
		"description": "tailwind CSS className"
	},
	"useState": {
		"prefix": "ust",
		"body": [
			"const [${1:stateName}, set${1/(.*)/${1:/capitalize}/}] = useState(${2:initialState});"
		],
		"description": "add useState"
	},
	"useEffect": {
		"prefix": "use",
		"body": [
			"useEffect(() => {",
			"  $0",
			"}, []);"
		],
		"description": "add useEffect"
	},
	"useMemo": {
		"prefix": "usm",
		"body": [
			"useMemo(() => {",
			"  $0",
			"}, []);"
		],
		"description": "add useMemo"
	},
	"useCallBack": {
		"prefix": "usc",
		"body": [
			"useCallBack(() => {",
			"  $0",
			"}, []);"
		],
		"description": "add useCallBack"
	}
}
